// =====================================================================
// Media Query Mixins
// For min/max pixel values


@mixin min($min: 0, $media: "screen") {
  $query: "only " + $media + " and (min-width: " + ($min) + ")";
  @media #{$query} {
    @content;
  };
}


@mixin max($max: 3000, $media: "screen") {
  $query: "only " + $media + " and (max-width: " + ($max - 1) + ")";
  @media #{$query} {
      @content;
  };
}

@mixin minmax($min: null, $max: null, $media: "screen") {
  $query: "only " + $media;

  @if $min != null and $max != null {
      $query: "only " + $media + " and (min-width: " + $min + ") and (max-width: " + ($max - 1) + ")";
  } @else if $min == null and $max != null {
      $query: "only " + $media + " and (max-width: " + ($max - 1) + ")";
  } @else if $min != null and $max == null {
      $query: "only " + $media + " and (min-width: " + $min + ")";
  }

  @media #{$query} {
      @content;
  };
}

@mixin img-fluid {
  // Part 1: Set a maximum relative to the parent
  max-width: 100%;
  // Part 2: Override the height to auto, otherwise images will be stretched
  // when setting a width and height attribute on the img element.
  height: auto;
}

@function rem($size) {
  $remSize: $size / $base-font-size;
  @return #{$remSize}rem;
}